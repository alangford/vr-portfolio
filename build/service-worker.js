"use strict";var precacheConfig=[["/index.html","aaa3f4c57ef0ad5bb6a05c7592cb49e7"],["/static/js/main.64e8a013.js","b0e9f97a0b0210ded3393a72d3e62988"],["/static/media/aws.ed999f8a.png","ed999f8a52b382d6ca50e542cd633ad9"],["/static/media/docker.d3db99f7.png","d3db99f71d0b7122b395b43fbf045e75"],["/static/media/floor2.4b6c7947.jpg","4b6c79470856faf6d56d7553b290ca11"],["/static/media/git.f29d822a.jpg","f29d822a88d377c7fe51e5c856713537"],["/static/media/go.9c4858a6.jpg","9c4858a65c102a835cc025e15488b4cd"],["/static/media/java.67b431e6.jpg","67b431e6ce93e0d3181c24030e1ad731"],["/static/media/jquery.1ffb57a5.png","1ffb57a5500a467286ea814b2dcf26a7"],["/static/media/mongodb.af8fd4bc.png","af8fd4bc4f30e564194d0b781efb331a"],["/static/media/mysql.bf50797a.png","bf50797a4b7ba0fe8f0be8a8f70c8139"],["/static/media/nginx.37989b4b.png","37989b4ba0f810fa07c1509e7d571fa8"],["/static/media/nodejs.9a7717e0.png","9a7717e01c856e3f6ba3ce9741f3b46a"],["/static/media/pong.a89a831b.png","a89a831b933b037948e7d083cc3e8ce0"],["/static/media/portrait.ff67fc5d.jpg","ff67fc5dc18f708e44184de7a05d5c62"],["/static/media/postgresqll.b659aa9b.png","b659aa9bd477e1c1a66f9bfd99129d42"],["/static/media/react.6c6ee471.png","6c6ee471d3db198afe7b91359fcc7735"],["/static/media/resume.5a1b392b.png","5a1b392b7568d0a827875a69f4c49b41"],["/static/media/ruby.dbf50c0f.png","dbf50c0fb74b07b1d7fe0c56f0d09616"],["/static/media/tetris.f6f3756a.png","f6f3756a04df2741b3dc7bce21d61f6f"],["/static/media/webpack.f8e3e6c9.png","f8e3e6c9fb403ad5bae1c1d6bdc56e92"],["/static/media/website.fdd6f516.png","fdd6f51677ca306fbdaf9262b09224e0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});